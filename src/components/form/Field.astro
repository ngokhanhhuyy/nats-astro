---
import type { JSX } from "astro/jsx-runtime";
import { useHTMLUtils } from "@/utils/htmlUtils";

// Props.
type Props = {
  name: string;
  displayName: string;
  floating?: boolean;
} & JSX.HTMLAttributes;
const props = Astro.props;

// Dependencies.
const { compute, joinHTMLClass } = useHTMLUtils();

// Computed.
const validationMessageClass = compute<string>(() => {
  if (Astro.locals.modelErrorMessagesStore.hasError(props.name)) {
    return "text-danger";
  };

  return "text-success";
});
---

<div {...props} class={joinHTMLClass(props.class, "form-group")}>
  {props.floating ? (
    <div class="form-floating">
      <slot />
      <label class="form-label small">{props.displayName}</label>
    </div>
  ) : (
    <label class="form-label fw-bold small m-0 regular-label">{props.displayName}</label>
    <slot />
  )}
  
  {Astro.locals.modelErrorMessagesStore.hasError(Astro.props.name) && (
    <span class={validationMessageClass}>
      {Astro.locals.modelErrorMessagesStore.getMessage(props.name)}
    </span>
  )}
</div>

<style>
  .regular-label {
    color: var(--bs-success-text-emphasis);
    font-weight: bold;
    opacity: 75%;
  }
</style>