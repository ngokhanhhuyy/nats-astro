---
import { actions } from "astro:actions";
import { z } from "astro:schema";

const SignInModel = z.object({
    userName: z.string({ required_error: "Username is required" }),
    password: z.string({ required_error: "Password is required" }),
})

type SignInModel = z.infer<typeof SignInModel>;



if (Astro.request.method === "POST") {
  
}
---

<html>
  <body>
    <div class="container">
      <form id="signInForm" method="post">
        <label for="userName">UserName</label>
        <input name="userName" id="userName" />
        <br />
        <label for="password">Password</label>
        <input name="password" id="password" type="password" />
        <br />
        <button type="submit">Submit</button>
      </form>

      <pre id="data"></pre>
      <pre id="error"></pre>
    </div>
  </body>
</html>

<script>
  import { actions } from "astro:actions";

  const form = document.getElementById("signInForm") as HTMLFormElement;
  if (form) {
    form.addEventListener("submit", async (event: SubmitEvent) => {
      event.preventDefault();
      const formData = new FormData(form);
      const { data, error } = await actions.signIn(formData);

      const dataElement = document.getElementById("data") as HTMLPreElement;
      dataElement.innerText = JSON.stringify(data, null, 2);

      const errorElement = document.getElementById("error") as HTMLPreElement;
      errorElement.innerText = JSON.stringify(error, null, 2);
    });
  }
</script>

<style>
  body {
    background: rgba(0, 0, 0, 0.1);
    height: fit-content;
    min-height: 100%;
    padding: 0;
    margin: 0;
    display: flex;
    align-items: stretch;
    justify-content: center;
  }

  .container {
    background: white;
    width: 100%;
    max-width: 1200px;
    border-left: 1px solid rgba(0, 0, 0, 0.25);
    border-right: 1px solid rgba(0, 0, 0, 0.25);
    min-height: 100vh;
  }
</style>
