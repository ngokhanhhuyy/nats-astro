---
import { useHTMLUtils } from "@/utils/htmlUtils";

// Layout components.
import ProtectedLayout, { type Props as ProtectedLayoutProps } from "./ProtectedLayout.astro";
import MainBlock from "./MainBlock.astro";

// Props.
export type Props = ProtectedLayoutProps;

// Dependencies.
const { compute } = useHTMLUtils();

// Computed.
const errorMessages = compute<string[]>(() => {
  return Astro.locals.modelErrorMessagesStore.getAllErrorMessages();
});
---

<ProtectedLayout {...Astro.props}>
  {errorMessages.length > 0 && (
    <div class="row g-3 mb-3">
      <div class="col col-12">
        <MainBlock
          title="Lỗi dữ liệu không hợp lệ"
          bodyPadding={3}
          bodyClass="text-danger"
          color="danger"
          id="error-summary-block"
        >
          {errorMessages.length === 1 ? (
            <span>{errorMessages[0]}</span>
          ) : errorMessages.map(message => (
            <span>ー {message}</span><br/>
          ))}
        </MainBlock>
      </div>
    </div>
  )}

  <slot></slot>
</ProtectedLayout>

<script>
  import type { IModelErrorMessagesStore } from "@/utils/modelErrorUtils";

  document.addEventListener("DOMContentLoaded", () => {
    const errorSummaryBlockBodyElement = document.querySelector("#error-summary-block .block-body");
    document.addEventListener("ajax-request-error", handleAjaxRequestError);

    function handleAjaxRequestError(e: Event): void {
      const event = e as CustomEvent<IModelErrorMessagesStore>;
      errorSummaryBlockElement
    }
  });
</script>