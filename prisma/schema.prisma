generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./database/database.db"
}

model SliderItem {
  id           Int     @id @default(autoincrement())
  title        String?
  thumbnailUrl String? @map("thumbnail_url")
  index        Int     @default(0)

  @@map("slider_items")
}

model SummaryItem {
  id             Int     @id @default(autoincrement())
  name           String
  summaryContent String  @map("summary_content")
  detailContent  String  @map("detail_content")
  thumbnailUrl   String? @map("thumbnail_url")

  @@map("summary_items")
}

model AboutUsIntroduction {
  id                   Int           @id @default(autoincrement())
  thumbnailUrl         String?       @map("thumbnail_url")
  thumbnailType        ThumbnailType @default(Photo) @map("thumbnail_type")
  mainQuoteContent     String        @map("main_quote_content")
  aboutUsContent       String        @map("about_us_content")
  whyChooseUsContent   String        @map("why_choose_us")
  ourDifferenceContent String        @map("our_difference_content")
  ourCultureContent    String        @map("our_culture_content")

  @@map("about_us_introductions")
}

model Member {
  id           Int     @id @default(autoincrement())
  fullName     String  @map("member")
  roleName     String  @map("role_name")
  description  String
  thumbnailUrl String? @map("thumbnail_url")

  @@map("members")
}

model Certificate {
  id           Int     @id @default(autoincrement())
  name         String?
  thumbnailUrl String  @map("thumbnail_url")
  @@map("certificates")
}

model CatalogItem {
  id           Int             @id @default(autoincrement())
  name         String        
  type         CatalogItemType
  summary      String        
  detail       String
  thumbnailUrl String?         @map("thumbnail_url")

  @@map("catalog_items")
}

model Contact {
  id      Int         @id @default(autoincrement())
  type    ContactType
  content String    

  @@map("contacts")
}

model Enquiry {
  int Int @id @default(autoincrement())
  fullName String @map("full_name")
  email String?
  phoneNumber String @map("phone_number")
  content String
  receivedDateTime DateTime @default(now()) @map("received_datetime")
  isCompleted Boolean @default(false) @map("is_completed")

  @@map("enquiries")
}

model GeneralSettings {
  id Int @id @default(autoincrement())
  applicationName String @map("application_name")
  applicationShortName String @map("application_short_name")
  isUnderMaintainance Boolean @default(false) @map("is_under_maintainance")

  @@map("general_settings")
}

model Post {
  id Int @id @default(autoincrement())
  title String
  uniqueTitle String @unique @map("unique_title")
  thumbnailUrl String? @map("thumbnail_url")
  content String
  createdDateTime DateTime @default(now()) @map("created_datetime")
  updatedDateTime DateTime? @map("updated_datetime")
  isPinned Boolean @default(false) @map("is_pinned")
  isPublished Boolean @default(false) @map("is_published")
  views Int @default(0)
  authorId Int @map("author_id")
  author User @relation(fields: [authorId], references: [id])
  
  @@map("posts")
}

model TrafficByHour {
  id Int @id @default(autoincrement())
  recordedDateTime DateTime @default(now()) @map("recorded_datetime")
  accessCount Int @default(0) @map("access_count")
  guestCount Int @default(0) @map("guest_count")
  trafficByDateId Int @map("traffic_by_date_id")
  trafficByDate TrafficByDate @relation(fields: [trafficByDateId], references: [id])

  @@map("traffic_by_hours")
}

model TrafficByDate {
  id Int @id @default(autoincrement())
  recordedDateTime DateTime @default(now()) @map("recorded_datetime")
  accessCount Int @default(0) @map("access_count")
  guestCount Int @default(0) @map("guest_count")
  trafficByHours TrafficByHour[]

  @@map("traffic_by_dates")
}

model User {
  id Int @id @default(autoincrement())
  userName String @map("username") @unique
  passwordHash String @map("password_hash")
  permission UserPermission?
  posts Post[]
  
  @@map("users")
}

model UserPermission {
  id Int @id @default(autoincrement())
  canCreateUser Boolean @default(false) @map("can_create_user")
  canResetUserPassword Boolean @default(false) @map("can_reset_user_password")
  canDeleteUser Boolean @default(false) @map("can_delete_user")
  userId Int @unique
  user User @relation(fields: [userId], references: [id])

  @@map("user_permissions")
}

enum ThumbnailType {
  Photo
  YoutubeVideo

  @@map("thumbnail_type")
}

enum CatalogItemType {
  Service
  Course
  Product

  @@map("catalog_item_type")
}

enum ContactType {
  PhoneNumber
  ZaloNumber
  Email
  Address

  @@map("contact_type")
}
